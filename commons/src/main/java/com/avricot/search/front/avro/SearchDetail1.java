/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.avricot.search.front.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SearchDetail1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9035309841253415512L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SearchDetail1\",\"namespace\":\"com.avricot.search.front.avro\",\"fields\":[{\"name\":\"clientId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"searchType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"searchTime\",\"type\":\"long\"},{\"name\":\"sentDuration\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"receiveDuration\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"totalDuration\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"query\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ids\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"resultCount\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String clientId;
  @Deprecated public java.lang.String searchType;
  @Deprecated public long searchTime;
  @Deprecated public java.lang.Integer sentDuration;
  @Deprecated public java.lang.Integer receiveDuration;
  @Deprecated public java.lang.Integer totalDuration;
  @Deprecated public java.lang.String query;
  @Deprecated public java.util.List<java.lang.String> ids;
  @Deprecated public java.lang.Integer resultCount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SearchDetail1() {}

  /**
   * All-args constructor.
   */
  public SearchDetail1(java.lang.String clientId, java.lang.String searchType, java.lang.Long searchTime, java.lang.Integer sentDuration, java.lang.Integer receiveDuration, java.lang.Integer totalDuration, java.lang.String query, java.util.List<java.lang.String> ids, java.lang.Integer resultCount) {
    this.clientId = clientId;
    this.searchType = searchType;
    this.searchTime = searchTime;
    this.sentDuration = sentDuration;
    this.receiveDuration = receiveDuration;
    this.totalDuration = totalDuration;
    this.query = query;
    this.ids = ids;
    this.resultCount = resultCount;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return clientId;
    case 1: return searchType;
    case 2: return searchTime;
    case 3: return sentDuration;
    case 4: return receiveDuration;
    case 5: return totalDuration;
    case 6: return query;
    case 7: return ids;
    case 8: return resultCount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: clientId = (java.lang.String)value$; break;
    case 1: searchType = (java.lang.String)value$; break;
    case 2: searchTime = (java.lang.Long)value$; break;
    case 3: sentDuration = (java.lang.Integer)value$; break;
    case 4: receiveDuration = (java.lang.Integer)value$; break;
    case 5: totalDuration = (java.lang.Integer)value$; break;
    case 6: query = (java.lang.String)value$; break;
    case 7: ids = (java.util.List<java.lang.String>)value$; break;
    case 8: resultCount = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'clientId' field.
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.String value) {
    this.clientId = value;
  }

  /**
   * Gets the value of the 'searchType' field.
   */
  public java.lang.String getSearchType() {
    return searchType;
  }

  /**
   * Sets the value of the 'searchType' field.
   * @param value the value to set.
   */
  public void setSearchType(java.lang.String value) {
    this.searchType = value;
  }

  /**
   * Gets the value of the 'searchTime' field.
   */
  public java.lang.Long getSearchTime() {
    return searchTime;
  }

  /**
   * Sets the value of the 'searchTime' field.
   * @param value the value to set.
   */
  public void setSearchTime(java.lang.Long value) {
    this.searchTime = value;
  }

  /**
   * Gets the value of the 'sentDuration' field.
   */
  public java.lang.Integer getSentDuration() {
    return sentDuration;
  }

  /**
   * Sets the value of the 'sentDuration' field.
   * @param value the value to set.
   */
  public void setSentDuration(java.lang.Integer value) {
    this.sentDuration = value;
  }

  /**
   * Gets the value of the 'receiveDuration' field.
   */
  public java.lang.Integer getReceiveDuration() {
    return receiveDuration;
  }

  /**
   * Sets the value of the 'receiveDuration' field.
   * @param value the value to set.
   */
  public void setReceiveDuration(java.lang.Integer value) {
    this.receiveDuration = value;
  }

  /**
   * Gets the value of the 'totalDuration' field.
   */
  public java.lang.Integer getTotalDuration() {
    return totalDuration;
  }

  /**
   * Sets the value of the 'totalDuration' field.
   * @param value the value to set.
   */
  public void setTotalDuration(java.lang.Integer value) {
    this.totalDuration = value;
  }

  /**
   * Gets the value of the 'query' field.
   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * Sets the value of the 'query' field.
   * @param value the value to set.
   */
  public void setQuery(java.lang.String value) {
    this.query = value;
  }

  /**
   * Gets the value of the 'ids' field.
   */
  public java.util.List<java.lang.String> getIds() {
    return ids;
  }

  /**
   * Sets the value of the 'ids' field.
   * @param value the value to set.
   */
  public void setIds(java.util.List<java.lang.String> value) {
    this.ids = value;
  }

  /**
   * Gets the value of the 'resultCount' field.
   */
  public java.lang.Integer getResultCount() {
    return resultCount;
  }

  /**
   * Sets the value of the 'resultCount' field.
   * @param value the value to set.
   */
  public void setResultCount(java.lang.Integer value) {
    this.resultCount = value;
  }

  /**
   * Creates a new SearchDetail1 RecordBuilder.
   * @return A new SearchDetail1 RecordBuilder
   */
  public static com.avricot.search.front.avro.SearchDetail1.Builder newBuilder() {
    return new com.avricot.search.front.avro.SearchDetail1.Builder();
  }
  
  /**
   * Creates a new SearchDetail1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SearchDetail1 RecordBuilder
   */
  public static com.avricot.search.front.avro.SearchDetail1.Builder newBuilder(com.avricot.search.front.avro.SearchDetail1.Builder other) {
    return new com.avricot.search.front.avro.SearchDetail1.Builder(other);
  }
  
  /**
   * Creates a new SearchDetail1 RecordBuilder by copying an existing SearchDetail1 instance.
   * @param other The existing instance to copy.
   * @return A new SearchDetail1 RecordBuilder
   */
  public static com.avricot.search.front.avro.SearchDetail1.Builder newBuilder(com.avricot.search.front.avro.SearchDetail1 other) {
    return new com.avricot.search.front.avro.SearchDetail1.Builder(other);
  }
  
  /**
   * RecordBuilder for SearchDetail1 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SearchDetail1>
    implements org.apache.avro.data.RecordBuilder<SearchDetail1> {

    private java.lang.String clientId;
    private java.lang.String searchType;
    private long searchTime;
    private java.lang.Integer sentDuration;
    private java.lang.Integer receiveDuration;
    private java.lang.Integer totalDuration;
    private java.lang.String query;
    private java.util.List<java.lang.String> ids;
    private java.lang.Integer resultCount;

    /** Creates a new Builder */
    private Builder() {
      super(com.avricot.search.front.avro.SearchDetail1.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.avricot.search.front.avro.SearchDetail1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.clientId)) {
        this.clientId = data().deepCopy(fields()[0].schema(), other.clientId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.searchType)) {
        this.searchType = data().deepCopy(fields()[1].schema(), other.searchType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.searchTime)) {
        this.searchTime = data().deepCopy(fields()[2].schema(), other.searchTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sentDuration)) {
        this.sentDuration = data().deepCopy(fields()[3].schema(), other.sentDuration);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.receiveDuration)) {
        this.receiveDuration = data().deepCopy(fields()[4].schema(), other.receiveDuration);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalDuration)) {
        this.totalDuration = data().deepCopy(fields()[5].schema(), other.totalDuration);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.query)) {
        this.query = data().deepCopy(fields()[6].schema(), other.query);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ids)) {
        this.ids = data().deepCopy(fields()[7].schema(), other.ids);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.resultCount)) {
        this.resultCount = data().deepCopy(fields()[8].schema(), other.resultCount);
        fieldSetFlags()[8] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing SearchDetail1 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.avricot.search.front.avro.SearchDetail1 other) {
            super(com.avricot.search.front.avro.SearchDetail1.SCHEMA$);
      if (isValidValue(fields()[0], other.clientId)) {
        this.clientId = data().deepCopy(fields()[0].schema(), other.clientId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.searchType)) {
        this.searchType = data().deepCopy(fields()[1].schema(), other.searchType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.searchTime)) {
        this.searchTime = data().deepCopy(fields()[2].schema(), other.searchTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sentDuration)) {
        this.sentDuration = data().deepCopy(fields()[3].schema(), other.sentDuration);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.receiveDuration)) {
        this.receiveDuration = data().deepCopy(fields()[4].schema(), other.receiveDuration);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalDuration)) {
        this.totalDuration = data().deepCopy(fields()[5].schema(), other.totalDuration);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.query)) {
        this.query = data().deepCopy(fields()[6].schema(), other.query);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ids)) {
        this.ids = data().deepCopy(fields()[7].schema(), other.ids);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.resultCount)) {
        this.resultCount = data().deepCopy(fields()[8].schema(), other.resultCount);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'clientId' field.
      * @return The value.
      */
    public java.lang.String getClientId() {
      return clientId;
    }

    /**
      * Sets the value of the 'clientId' field.
      * @param value The value of 'clientId'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setClientId(java.lang.String value) {
      validate(fields()[0], value);
      this.clientId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'clientId' field has been set.
      * @return True if the 'clientId' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'clientId' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearClientId() {
      clientId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchType' field.
      * @return The value.
      */
    public java.lang.String getSearchType() {
      return searchType;
    }

    /**
      * Sets the value of the 'searchType' field.
      * @param value The value of 'searchType'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setSearchType(java.lang.String value) {
      validate(fields()[1], value);
      this.searchType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'searchType' field has been set.
      * @return True if the 'searchType' field has been set, false otherwise.
      */
    public boolean hasSearchType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'searchType' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearSearchType() {
      searchType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'searchTime' field.
      * @return The value.
      */
    public java.lang.Long getSearchTime() {
      return searchTime;
    }

    /**
      * Sets the value of the 'searchTime' field.
      * @param value The value of 'searchTime'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setSearchTime(long value) {
      validate(fields()[2], value);
      this.searchTime = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'searchTime' field has been set.
      * @return True if the 'searchTime' field has been set, false otherwise.
      */
    public boolean hasSearchTime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'searchTime' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearSearchTime() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'sentDuration' field.
      * @return The value.
      */
    public java.lang.Integer getSentDuration() {
      return sentDuration;
    }

    /**
      * Sets the value of the 'sentDuration' field.
      * @param value The value of 'sentDuration'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setSentDuration(java.lang.Integer value) {
      validate(fields()[3], value);
      this.sentDuration = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'sentDuration' field has been set.
      * @return True if the 'sentDuration' field has been set, false otherwise.
      */
    public boolean hasSentDuration() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'sentDuration' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearSentDuration() {
      sentDuration = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiveDuration' field.
      * @return The value.
      */
    public java.lang.Integer getReceiveDuration() {
      return receiveDuration;
    }

    /**
      * Sets the value of the 'receiveDuration' field.
      * @param value The value of 'receiveDuration'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setReceiveDuration(java.lang.Integer value) {
      validate(fields()[4], value);
      this.receiveDuration = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'receiveDuration' field has been set.
      * @return True if the 'receiveDuration' field has been set, false otherwise.
      */
    public boolean hasReceiveDuration() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'receiveDuration' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearReceiveDuration() {
      receiveDuration = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalDuration' field.
      * @return The value.
      */
    public java.lang.Integer getTotalDuration() {
      return totalDuration;
    }

    /**
      * Sets the value of the 'totalDuration' field.
      * @param value The value of 'totalDuration'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setTotalDuration(java.lang.Integer value) {
      validate(fields()[5], value);
      this.totalDuration = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'totalDuration' field has been set.
      * @return True if the 'totalDuration' field has been set, false otherwise.
      */
    public boolean hasTotalDuration() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'totalDuration' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearTotalDuration() {
      totalDuration = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'query' field.
      * @return The value.
      */
    public java.lang.String getQuery() {
      return query;
    }

    /**
      * Sets the value of the 'query' field.
      * @param value The value of 'query'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setQuery(java.lang.String value) {
      validate(fields()[6], value);
      this.query = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'query' field has been set.
      * @return True if the 'query' field has been set, false otherwise.
      */
    public boolean hasQuery() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'query' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearQuery() {
      query = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'ids' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getIds() {
      return ids;
    }

    /**
      * Sets the value of the 'ids' field.
      * @param value The value of 'ids'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setIds(java.util.List<java.lang.String> value) {
      validate(fields()[7], value);
      this.ids = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'ids' field has been set.
      * @return True if the 'ids' field has been set, false otherwise.
      */
    public boolean hasIds() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'ids' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearIds() {
      ids = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'resultCount' field.
      * @return The value.
      */
    public java.lang.Integer getResultCount() {
      return resultCount;
    }

    /**
      * Sets the value of the 'resultCount' field.
      * @param value The value of 'resultCount'.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder setResultCount(java.lang.Integer value) {
      validate(fields()[8], value);
      this.resultCount = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'resultCount' field has been set.
      * @return True if the 'resultCount' field has been set, false otherwise.
      */
    public boolean hasResultCount() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'resultCount' field.
      * @return This builder.
      */
    public com.avricot.search.front.avro.SearchDetail1.Builder clearResultCount() {
      resultCount = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public SearchDetail1 build() {
      try {
        SearchDetail1 record = new SearchDetail1();
        record.clientId = fieldSetFlags()[0] ? this.clientId : (java.lang.String) defaultValue(fields()[0]);
        record.searchType = fieldSetFlags()[1] ? this.searchType : (java.lang.String) defaultValue(fields()[1]);
        record.searchTime = fieldSetFlags()[2] ? this.searchTime : (java.lang.Long) defaultValue(fields()[2]);
        record.sentDuration = fieldSetFlags()[3] ? this.sentDuration : (java.lang.Integer) defaultValue(fields()[3]);
        record.receiveDuration = fieldSetFlags()[4] ? this.receiveDuration : (java.lang.Integer) defaultValue(fields()[4]);
        record.totalDuration = fieldSetFlags()[5] ? this.totalDuration : (java.lang.Integer) defaultValue(fields()[5]);
        record.query = fieldSetFlags()[6] ? this.query : (java.lang.String) defaultValue(fields()[6]);
        record.ids = fieldSetFlags()[7] ? this.ids : (java.util.List<java.lang.String>) defaultValue(fields()[7]);
        record.resultCount = fieldSetFlags()[8] ? this.resultCount : (java.lang.Integer) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
